<script type="text/javascript">

/* An object representing the general purpose panels used across nrdb
 * Assumes there will be at most one header, subheader, and body
 * Attempting to add more will result in unintended duplication of content
 * Hidden attributes:
 * - isExclusive: bool - if true, hide all sibling panels when this one is shown
 */
class Panel {
  static instances = new Map();
  static get(id) {
    return Panel.instances.get(id);
  }

  // Creates a container of panels
  // id is optional
  // controls specifies which controls to generate of "toggle" and "search"
  static createPanelList(parent, id, ...controls) {
    const panel_list = parent.append(`<div ${id ? `id="${id}"` : ''} class="panel-list"></div>`).find('.panel-list');
    if (controls?.length > 0) {
      panel_list.append('<p class="row"></p>');
      const row = panel_list.find('.row');
      const toggle = controls.includes("toggle");
      const search = controls.includes("search");
      // Add controls
      if (toggle) { row.append('<button class="show-all btn btn-secondary">Show all</button>'); }
      if (search) { row.append('<div class="panel-search"><input type="text" class="form-control" placeholder="Search..." aria-label="Search"></input></div>'); }
      if (toggle) { row.append('<button class="hide-all col-md-1 col-sm-2 btn btn-secondary">Hide all</button>'); }
      // Enable event handling
      if (toggle) {
        panel_list.find('.show-all').on('click', function (event) {
          const panels = panel_list.find('.panel').each(function() {
            Panel.get($(this).attr('id')).show();
          });
        });
        panel_list.find('.hide-all').on('click', function (event) {
          const panels = panel_list.find('.panel').each(function() {
            Panel.get($(this).attr('id')).hide();
          });
        });
      }
      if (search) {
        const inputField = panel_list.find('.panel-search input');
        inputField.on('keyup', function() {
          const query = inputField.val().trim().toLowerCase();
          panel_list.find('.panel').each(function() {
            if ($(this).find('.header').html().toLowerCase().includes(query)) {
              $(this).show();
            } else {
              $(this).hide();
            }
          });
        });
      }
    }
    return panel_list;
  }

  constructor(parent, id, visible=true) {
    this.parent = parent;
    this.visible = visible;
    this.jqRef = parent.append(`<div id="${id}" class="panel panel-default"></div>`).find(`#${id}`);
    Panel.instances.set(id, this);
  }

  addHeader(name) {
    this.header = this.jqRef.append(`<div class="header panel-heading" style="display: flex;"></div>`).find(`.header`);
    this.header.append(`<h3 style="margin: 15px 0 10px 0">${name}</h3>`)
               .append(`<button class="btn btn-secondary" style="margin-left:auto; margin-top: auto; margin-bottom: auto;">${this.visible ? 'Hide' : 'Show'}</button>`);
    this.button = this.header.find('button');
    const caller = this;
    this.button.on('click', function() {caller.toggle(250);});
    return this;
  }

  addSubheader(content) {
    this.subheader = this.jqRef.append(`<div class="subheader panel-heading" ${this.visible ? '' : 'style="display: none;"'}>${content}</div>`).find('.subheader');
    return this;
  }

  addBody() {
    this.body = this.jqRef.append(`<div class="panel-body" ${this.visible ? '' : 'style="display: none;"'}>`).find('.panel-body');
    return this;
  }
  addBodyContent(content) {
    this.body.append(content);
    return this;
  }

  show(duration=0) {
    if (this.onShowFunc) {
      this.onShowFunc();
      this.onShowFunc = null;
    }
    if (this.isExclusive) {
      this.parent.find('.panel').each(function() {
        Panel.get($(this).attr('id')).hide(duration);
      });
    }
    this.visible = true;
    this.button.html('Hide');
    this.subheader?.show(duration);
    this.body?.show(duration);
  }
  hide(duration=0) {
    this.visible = false;
    this.button.html('Show');
    this.subheader?.hide(duration);
    this.body?.hide(duration);
  }
  toggle(duration=0) {
    if (this.visible) {
      this.hide(duration);
    } else {
      this.show(duration);
    }
  }

  // Provides the panel a function to run the next time show() is called
  // Assumes the panel is currently hidden
  set onShow(f) {
    this.onShowFunc = f;
  }
}

</script>

<style>

/* Panel list control panel */
.panel-list .row {
  margin: 0 0 16px 0;
  display: flex;
  flex-wrap: wrap;
}
.panel-list .panel-search {
  flex-grow: 0;
  order: 1;
  width: 100%;
  padding: 12px 0 0 0;
}
.panel-list .show-all, .panel-list .hide-all {
  flex: auto;
}
.panel-list .hide-all {
  margin-left: 12px;
}

@media (min-width: 768px) {
  .panel-list .row > * {
    margin: 0;
  }
  .panel-list .hide-all, .panel-list .show-all {
    flex: none;
  }
  .panel-list .panel-search {
    flex-grow: 1;
    order: 0;
    width: unset;
    padding: 0;
  }
  .panel-list .panel-search:not(:first-child) { /* when surrounded by buttons */
    padding: 0 12px;
  }
}

</style>
